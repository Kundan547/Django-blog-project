name: Django CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up Python environment
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r django_project/requirements.txt

    # Step 4: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 5: Build and push Docker image
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./django_project  # Set context to the django_project directory
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/django-blog-password:latest
        dockerfile: ./django_project/Dockerfile  # Specify Dockerfile location

    # Step 6: Set up SSH agent to allow SSH to EC2
    - name: Set up SSH agent
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}  # Reference private key from GitHub secrets

    # Step 7: Deploy to AWS EC2
    - name: Deploy to AWS EC2
      run: |
        # Verbose SSH connection to debug and deploy
        ssh -v -o StrictHostKeyChecking=no -T -i /tmp/private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          # Pull the latest Docker image
          docker pull ${{ secrets.DOCKER_USERNAME }}/django-blog-password:latest
          
          # Navigate to the project directory and restart the container
          cd /path/to/your/project
          docker-compose down
          docker-compose up -d
        EOF
